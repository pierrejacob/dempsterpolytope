% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gibbssampler.R
\name{gibbs_sampler}
\alias{gibbs_sampler}
\title{Gibbs sampler for Categorical inference}
\usage{
gibbs_sampler(niterations, counts, theta_0)
}
\arguments{
\item{niterations}{a number of iterations to perform (each iteration is a full sweep of Gibbs updates)}

\item{counts}{a vector of non-negative integers containing the count data; its length defines K, the number of categories.}

\item{theta_0}{(optional) a vector in the K-simplex used to initialize the sampler.
If missing, it is set to counts / sum(counts).}
}
\value{
A list containing 'etas', an array of dimension niterations x K x K
and 'Us', a list of K arrays, each of dimension niterations x N_k x K where N_k is the number of 
observations in category k. 
\enumerate{
\item etas: for iteration 'iteration', etas[iteration,,] is a K x K matrix.
The generated polytope at that iteration is made of all the vectors theta such that theta_l/theta_k < etas[iteration,k,l]
for all k,l in {1,...,K}.
\item Us: for iteration 'iteration', and category 'k' in {1,...,K}, Us[[k]][iteration,,]
is made of N_k rows, where N_k is the k-th entry of counts, i.e. the number of counts in category k.
Each row contains one of the vectors u_{n} with n in I_k in the notation of the article.
}
}
\description{
This is the main function of the package. It runs the proposed Gibbs sampler
for a desired number of iterations, for a given vector of counts.
It generates a convex polytope at each iteration. Below the number of categories is denoted by K,
and corresponds to the length of the input vector 'counts'.
}
\examples{
gibbs_results <- gibbs_sampler(niterations = 5, counts = c(1,2,3))
gibbs_results$etas[5,,]
}
