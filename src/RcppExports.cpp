// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// systematic_resampling_
IntegerVector systematic_resampling_(int nsamples, const NumericVector& weights);
RcppExport SEXP _montecarlodsm_systematic_resampling_(SEXP nsamplesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(systematic_resampling_(nsamples, weights));
    return rcpp_result_gen;
END_RCPP
}
// multinomial_resampling_
IntegerVector multinomial_resampling_(int nsamples, const NumericVector& weights);
RcppExport SEXP _montecarlodsm_multinomial_resampling_(SEXP nsamplesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(multinomial_resampling_(nsamples, weights));
    return rcpp_result_gen;
END_RCPP
}
// SSP_resampling_
IntegerVector SSP_resampling_(int nsamples, const NumericVector& weights);
RcppExport SEXP _montecarlodsm_SSP_resampling_(SEXP nsamplesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(SSP_resampling_(nsamples, weights));
    return rcpp_result_gen;
END_RCPP
}
// runif_piktheta_cpp
List runif_piktheta_cpp(int n, int k, NumericVector theta);
RcppExport SEXP _montecarlodsm_runif_piktheta_cpp(SEXP nSEXP, SEXP kSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(runif_piktheta_cpp(n, k, theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_montecarlodsm_systematic_resampling_", (DL_FUNC) &_montecarlodsm_systematic_resampling_, 2},
    {"_montecarlodsm_multinomial_resampling_", (DL_FUNC) &_montecarlodsm_multinomial_resampling_, 2},
    {"_montecarlodsm_SSP_resampling_", (DL_FUNC) &_montecarlodsm_SSP_resampling_, 2},
    {"_montecarlodsm_runif_piktheta_cpp", (DL_FUNC) &_montecarlodsm_runif_piktheta_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_montecarlodsm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
